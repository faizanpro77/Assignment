name :--shaikh md faizan md zainulhaque
mb no:-7775962642
email:-faizyshaikh204@gmail.com

........................................................................................
Arrays Practice Problems

1)Write a program in the following steps
a. Generates 10 Random 3 Digit number.
b. Store this random numbers into a array.
c. Then find the 2nd largest and the 2nd smallest element without sorting the array.
(*array1ass.sh*)

sol:--
#!/bin/bash
declare -a array
        for (( count=0; count<10; count++ ))
        do
        array[$count]=$(( RANDOM%(1000-100)+100 ))
        done
        echo ${array[@]}

largest=${array[0]}
secondGreatest=0

for((i=1; i < ${#array[@]}; i++))
do
  if [[ ${array[i]} > $largest ]]
  then
    secondGreatest=$largest
    largest=${array[i]}
elif (( ${array[i]} > $secondGreatest ))
then
    secondGreatest=${array[i]}
  fi
done
echo "secondGreatest = $secondGreatest"

smallest=${array[0]}
secondsmallest=0

for((i=1; i < ${#array[@]}; i++))
do
  if [[ ${array[i]} < $smallest ]]
  then
    secondsmallest=$smallest
    smallest=${array[i]}
elif (( ${array[i]} < $secondsmallest ))
then
    secondsmallest=${array[i]}
  fi
done
echo "secondsmallest = $secondsmallest"

output:---

264 685 198 401 917 687 835 383 357 272
secondGreatest = 835
secondsmallest = 264


2)Extend the above program to sort the array and then find the 2nd largest
and the 2nd smallest element.

(*array1ass.sh*)
sol:--

#! /bin/bash
temp=0
declare -a number
        for (( count=0; count<10; count++ ))
        do
        number[$count]=$(( RANDOM%(1000-100)+100 ))
        done
        echo ${number[@]}

for (( i=0; i<10; i++ ))
do
for ((j=i+1; j<10; j++ ))
do
        if [[ ${number[i]} < ${number[j]}  ]]
        then
        temp=${number[i]}
        number[$i]=${number[j]}
      number[$j]=$temp
        fi
done
done
echo "secondlargest element=" ${number[1]}
echo "array is sort in descending= " ${number[@]}

echo ""
for (( i=0; i<10; i++ ))
do
for ((j=i+1; j<10; j++ ))
do
        if [[ ${number[i]} > ${number[j]}  ]]
        then
        temp=${number[i]}
        number[$i]=${number[j]}

	number[$j]=$temp
        fi
done
done
echo "secondsmallest element=" ${number[1]}
echo "array is sort in ascending= " ${number[@]}

output:--
377 925 517 347 109 874 896 254 592 395
secondlargest element= 896
array is sort in descending=  925 896 874 592 517 395 377 347 254 109

secondsmallest element= 254
array is sort in ascending=  109 254 347 377 395 517 592 874 896 925





3)Extend the Prime Factorization Program to store all the Prime Factors of a
number n into an array and finally display the output.

sol:--
#! /bin/bash
declare -a array
read -p "enter a number" number
for(( count=2; number>1; count++))
do

        while [ $((number%count)) -eq 0 ]
        do
        #array[0]=$count
        array[$count]=$count
        number=$((number/count))
        done
done
echo ${array[@]}


o/p:--
enter a number12
2 3

4)Write a Program to show Sum of three Integer adds to ZERO

sol:--
#! /bin/bash
declare -a array
array=(3 0 5 6 10 13 -3)
echo ${array[@]}
n=${#array[@]}
echo ""
for (( count=0; count<n-2; count++ ))
do
        for (( count1=count+1; count1<n-1; count1++ ))
        do
                for((count2=count1+1; count2<n; count2++ ))
                do
                        if [ $((${array[count]}+${array[count1]}+${array[count2]})) -eq 0 ]
                        then
                                echo ${array[count]}  ${array[count1]} ${array[count2]}
                fi

                done
        done
done

echo "count =" ${#array[@]}
echo "index= " ${!array[@]}

o/p:--

3 0 5 6 10 13 -3

3 0 -3
count = 7
index=  0 1 2 3 4 5 6

5)Take a range from 0 â€“ 100, find the digits that are repeated twice like 33, 77,
etc and store them in an array

sol:--

#! /bin/bash
declare -a array
for ((i=1; i<100; i++ ))
do
        if [ $((i%11)) -eq 0 ]
        then
            array[$i]=$i
        fi
done
echo ${array[@]}

o/p:--
11 22 33 44 55 66 77 88 99

..........................................................................................


